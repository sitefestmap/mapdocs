@import 'components/Blockquote.css';
@import 'components/Code.css';
@import 'components/Emphasis.css';
@import 'components/Input.css';
@import 'components/Label.css';
@import './tokens.css';

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
    font-size: inherit;
    font-family: inherit;
    margin: 0;
    padding: 0;
}

*, ::before, ::after {
    box-sizing: border-box;
}

html {
    text-size-adjust: none;
    /* font-size: 1.2rem; */
}

body {
    background-color: var(--color-body_background);
    background-size: 200%;
    color: var(--color-text);
    font-family: sans-serif;
    font-size: 1.2rem;
    font-family: Gordita, Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
    font-family: monospace;
    min-height: 100vh;
    line-height: 1.5;
    margin: 0; /* leave spacing to components */
    padding: 0;
    text-rendering: optimizeSpeed;
}

    .sidebar nav { 
        display: grid; 
        padding: 1rem 0 0 0; 
        justify-items: center; 
        
        @media screen and (min-width:1008px) { 
            padding-top: 0; 
            justify-items:left; 
            
        }
    }


main {
    /* not-sidebar */
    flex-basis: 0;
    flex-grow: 999;
    /* narrowest main content */
    min-inline-size: 78%;
    min-inline-size: 82%;
    height: 100%;
    overflow-y: scroll;
    height: 100vh;
    padding: 1em;
    margin: 0rem auto;
    background: var(--color-body_background);
    --flow-space: 1em;
    /* 2. Declare on a component */
    /* & > * + * { margin-top: var(--flow-space, 1em); }   fallback value based on font-size */
}

/* :has(h1, h2, h3) */
h1 {
    text-align: center;
    /* text-transform: uppercase; */
    font-family: monospace;
    font-size: 2rem;
    font-weight: 100;
    line-height: 1.1;
    margin: 1rem auto;
    max-width: 80ch;
}

p {
    max-width: 80ch;
    margin: 1rem;
    line-height: 1.35;

    pre + & {
        margin-top: 2rem;
        margin-left: 2rem;
    }
    &:first-of-type {
        margin-top: 4rem;
        margin-left: 2rem;
    }
}

a {
    color: currentColor;
    font-weight: bold;
    header & { 
        text-decoration: none; 
    }
    main & { 
        display: inline; margin-right: initial; text-decoration: underline; 
    }
    header & { 
        border-bottom: none; 
    }
   
    &:hover {
        color: var(--color-string_expression) !important;
    
    }
    &.active {
        color: var(--color-string_expression);
    }
}

ul {
    list-style-position: inside; 
   
    main & {
        margin-left: 1rem;
        margin-left: 2rem;
    }
}

li {
    ol & { 
        margin-top: 1em;
        counter-increment: numbers; 
    }
}


div {
    margin: 0;
    /* Code Blocks */
    &.language-id {
        text-align: right;
       
        color: var(--color-comment);
        display: inline-block;
        background-color: var(--color-background);
        border-radius: 5px 5px 0 0;
        padding: 0.5rem 1rem 0 1rem;
    }

    &.with-sidebar {
        display: flex;
        flex-wrap: wrap;
        
        margin-top: 0;
    }

/* nav { main &}*/
    &.sidebar { 
        flex-basis: 11.5rem; /*flex-basis: 1080px; */
        flex-grow: 1;
        margin-top: 0;
        border-right: 1px solid var(--theme-colors-greydivider);
    }
}

   
/* ================================ */
/*
        SORT ALL THIS
*/

    .icon {
        width: .75em;
        height: .75em;
        stroke: currentColor;
        stroke-width: 4;
        fill: none;
        text-decoration-skip: objects;
    }
    
    .nav a:not([aria-current=true]):hover,
    .active {
        color: var(--color-string_expression);
    }


    .icon path {
        transition: d .25s;
    }

/* Override <A> Bold text */
.title { 
    font-size: 1.1rem;
    font-weight: normal; 
  }
  
  .app-container {
      border: 1px solid;
      width: 80vw;
      height: 100%;
      margin: 0;
      padding: 0;
      overflow: hidden;
  }
  
  .vh {
      clip-path: inset(100%) !important;
      clip: rect(1px, 1px, 1px, 1px) !important;
      height: 1px !important;
      overflow: hidden !important;
      position: absolute !important;
      white-space: nowrap !important;
      width: 1px !important;
  }
  
  .flow {
      --flow-space: 1.5rem;
  }
  
  .flow * + * {
      margin-top: var(--flow-space);
  }
  
  .flex-horizontal {
      display: flex;
      justify-content: space-between;
  }
  
  .theme-wrapper  {
      padding: .5rem;
  }
  
    .skip-link {
        display: inline-block;
        padding: 0.5rem 1.5rem 0.6rem 1.5rem;
        background: #efd6da;
        border: 1px solid #cccccc;
        border-radius: 0.25rem;
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        z-index: 99;
        text-decoration: none;
      }
      
      .skip-link:not(:focus) {
        clip: rect(0 0 0 0);
        height: auto;
        margin: 0;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
        white-space: nowrap;
      }
    
    /**
     * WRAPPER
     * Sets a max width, adds a consisten gutter and horizontally
     * centers the contents
     */
    
    
    .wrapper {
      max-width: 65rem;
      margin-left: auto;
      margin-right: auto;
      padding-left: 1.25rem;
      padding-right: 1.25rem;
    }
  
    .container {
        display: grid;
        place-items: center;
        margin-bottom: 6rem; /* wot */
    }
    
    .auto-grid {
      --min: 18rem;
    
      display: grid;
      gap: 0.5rem;
      grid-template-columns: repeat(auto-fit, minmax(var(--min), 1fr));
    }
    
    .center {
      display: grid;
      place-items: center;
    }
    
    .flow {
      --flow: 1em;
    }
  
    .flow  > * + * {
      margin-top: var(--flow)
    }
    
  .center-left {
    display: grid;
    justify-items: left;
  }
  
  /*
  .card {
      position: relative;
      margin: 0.3em;
      padding: 0.5em;
      border: 1px solid #eee;
      border-radius: 4px;
      box-shadow: 2px 2px 4px rgba(0,0,0,0.1); 
      min-height: 1em;
    
      @media screen and (min-width: 500px) {
          display: grid;
          grid-template-columns: max-content 1fr;
          grid-gap: 0.5rem 1.5rem;
      }
  }*/

/* go to utils */


hr {
    border: 1px solid var(--color-greydivider);
}

/* SORT */

:root {

    --ratio: 1.4;
    --s-5: clamp(0.33rem,0.39rem + -0.29vw,0.18rem);
    --s-3: clamp(0.51rem,0.57rem + -0.31vw,0.35rem);
    --s0: clamp(1rem,1rem + -0vw,1rem);
    --s1: clamp(0.8rem,0.84rem + -0.18vw,0.71rem);
    --s2: clamp(0.64rem,0.69rem + 0.85vw,2rem);
    
    --line-height: var(--ratio);
    --line-height-small: calc(0.8*var(--ratio));
}  

    * {
        font-size: inherit;
        font-family: inherit;
        margin: 0;
        padding: 0;
    }

    a {
        color: currentColor;
        font-weight: bold;
    }

   

    .icon {
        width: .75em;
        height: .75em;
        stroke: currentColor;
        stroke-width: 4;
        fill: none;
        text-decoration-skip: objects;
    }
    
   /* .nav ul {
        list-style: none;
        margin-left: 3rem; 
    } */

   /* .nav li+li {
        margin-top: var(--s-2)
    }*/

  

    .icon path {
        transition: d .25s;
    }



   
      
      /*
      code {
        counter-reset: step;
        counter-increment: step 0;
      }
      */
      
      /*
      .shiki {
        border-radius: var(--spacing-1);
        padding: var(--spacing-6) var(--spacing-4);
        margin: var(--spacing-4) auto var(--spacing-18);
        box-shadow: var(--shadow-elevation-medium);
        overflow-x: auto;
        max-width: var(--max-width-full);
      }*/
      
     /* .highlight-line {
        display: inline-block;
        background-color: var(--colour-code-background-highlighted);
        width: calc(var(--max-width-full) + var(--spacing-4));
        border-left: var(--spacing-1) solid var(--colour-code-line-highlight);
        margin-left: calc(-1 * var(--spacing-1));
      }

      */
     
      
      /*
      code .line::before {
        display: inline-block;
        content: counter(step);
        counter-increment: step;
        width: var(--spacing-6);
        margin-right: var(--spacing-6);
        text-align: right;
        font-variant-numeric: tabular-nums;
        color: var(--colour-line-numbers);
      }*/